var TestServer = require('../utility/testserver');
var Phantom = require('../illusion/phantom');
var WebPage = require('../illusion/webpage');

describe('WebPage specs', function() {
    var testServer = new TestServer();
    var phantom = new Phantom();
    var webPage;

    beforeEach(function(done) {
        testServer.start(1130, function() {
            phantom.open(function() {
                webPage = phantom.createWebPage(done);
            });
        });
    });

    it('should support open/close', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.close(done);
        });
    });

    it('should support get title/URL', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.getTitle(function(err, title) {
                expect(title).toEqual('test');
                webPage.getURL(function(err, url) {
                    expect(url).toEqual('http://localhost:1130/test.html');
                    webPage.close(done);
                });
            });
        });
    });

    it('should support add/remove/get cookie', function(done) {
        var cookie = {
            name: 'cookiename',
            value: 'cookievalue',
            domain: '.localhost'
        };
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.addCookies(cookie, function() {
                webPage.getCookies(function(err, cookies) {
                    expect(cookies.length).toEqual(1);
                    var cookie = cookies[0];
                    expect(cookie.name).toEqual('cookiename');
                    expect(cookie.value).toEqual('cookievalue');
                    expect(cookie.domain).toEqual('.localhost');
                    webPage.removeCookies('cookiename', function() {
                        webPage.getCookies(function(err, cookies) {
                            expect(cookies.length).toEqual(0);
                            webPage.close(done);
                        });
                    });
                });
            });
        });
    });

    it('should support add/remove/get/clear cookies', function(done) {
        var cookie = {
            name: 'cookiename',
            value: 'cookievalue',
            domain: '.localhost'
        };
        var cookie2 = {
            name: 'cookiename2',
            value: 'cookievalue2',
            domain: '.localhost'
        };
        var cookie3 = {
            name: 'cookiename3',
            value: 'cookievalue3',
            domain: '.localhost'
        };
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.addCookies([ cookie, cookie2, cookie3 ], function() {
                webPage.getCookies(function(err, cookies) {
                    expect(cookies.length).toEqual(3);
                    webPage.removeCookies([ 'cookiename', 'cookiename2' ], function() {
                        webPage.getCookies(function(err, cookies) {
                            expect(cookies.length).toEqual(1);
                            webPage.clearCookies(function() {
                                webPage.getCookies(function(err, cookies) {
                                    expect(cookies.length).toEqual(0);
                                    webPage.close(done);
                                });
                            });
                        });
                    });
                });
            });
        });
    });

    it('should support include/inject JS', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.includeJS('http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js', function() {
                webPage.injectJS('public/test.js', function(err, result) {
                    expect(result).toBe(true);
                    webPage.close(done);
                });
            });
        });
    });

    it('should support can go back/foward', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.canGoBack(function(err, result) {
                expect(result).toBe(false);
                webPage.canGoForward(function(err, result) {
                    expect(result).toBe(false);
                    webPage.close(done);
                });
            });
        });
    });

    it('should support go back/foward', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.open('http://localhost:1130/test2.html', function(err, status) {
                expect(status).toEqual('success');
                webPage.once('Page.URLChanged', function() {
                    webPage.getTitle(function(err, result) {
                        expect(result).toEqual('test');
                        webPage.once('Page.URLChanged', function() {
                            webPage.getTitle(function(err, result) {
                                expect(result).toEqual('test2');
                                webPage.close(done);
                            });
                        });
                        webPage.goForward();
                    });
                });
                webPage.goBack();
            });
        });
    });

    it('should support reload/stop', function(done) {
        done();
    });

    it('should support mouse/keyboard event', function(done) {
        done();
    });

    it('should support sync/async evaluate', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.evaluate(function() {
                return document.title;   
            }, function(err, title) {
                expect(title).toEqual('test');
                webPage.close(done);
            });
        });
    });

    it('should support set confirm callback', function(done) {
        done();
    });

    it('should support set prompt callback', function(done) {
        done();
    });

    it('should support get table by css3 selector', function(done) {
        webPage.open('http://localhost:1130/test2.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.getTable('table#table1', 'css3', function(err, table) {
                console.log(table);
                done();
            });
        });
    });

    it('should support get table by xpath selector', function(done) {
        webPage.open('http://localhost:1130/test2.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.getTable('//table[@id="table1"]', 'xpath', function(err, table) {
                //console.log(table);
                done();
            });
        });
    });

    it('should support click element', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.on('Page.URLChanged', function() {
                webPage.getTitle(function(err, title) {
                    expect(title).toEqual('test2');
                    done();
                });
            });
            webPage.clickElement('a', 'css3');
        });
    });

    it('should support has element', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.hasElement('h1', 'css3', function(err, result) {
                expect(result).toBe(true);
                webPage.hasElement('h2', 'css3', function(err, result) {
                    expect(result).toBe(false);
                    webPage.hasElement('/html/body/h1', 'xpath', function(err, result) {
                        expect(result).toBe(true);
                        webPage.hasElement('/html/body/h2', 'xpath', function(err, result) {
                            expect(result).toBe(false);
                            webPage.close(done);
                        });
                    });
                });
            });
        });
    });

    it('should support get text content', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.getTextContent('h1', 'css3', function(err, result) {
                expect(result).toContain('test');
                webPage.close(done);
            });
        });
    });

    it('should support submit form', function(done) {
        webPage.open('http://localhost:1130/test.html', function(err, status) {
            expect(status).toEqual('success');
            webPage.on('Page.URLChanged', function(targetURL) {
                expect(targetURL).toEqual('http://localhost:1130/test2.html?username=username&password=password');
                webPage.close(done);
            });
            webPage.submitForm('form', 'css3', {
                username: 'username',
                password: 'password'
            });
        });
    });

    afterEach(function(done) {
        phantom.close(function() {
            testServer.stop();
            done();
        });
    });
});