var Timing = require('../utility/timing');

describe('Timing specs', function() {
    var timing;
    var finish;

    beforeEach(function() {
        timing = new Timing();
        finish = false;
    });

    it('should support wait start success', function(done) {
        setTimeout(function() {
            finish = true;
        }, 500);
        timing.waitStart(function(next) {
            if (finish) {
                return next && next('A', 'B', 'C');
            }
        }, 100, 600, function(a, b, c) {
            expect(a).toEqual('A');
            expect(b).toEqual('B');
            expect(c).toEqual('C');
            done();
        }, null);
    });

    it('should support wait start fail', function(done) {
        var timer = setTimeout(function() {
            finish = true;
        }, 500);
        timing.waitStart(function(next) {
            if (finish) {
                return next && next('A', 'B', 'C');
            }
        }, 100, 400, null, function() {
            clearTimeout(timer);
            done();
        });
    });

    it('should support wait finish success', function(done) {
        timing.waitFinish(function(next) {
            setTimeout(function() {
                return next && next('A', 'B', 'C');
            }, 500);
        }, 600, function(a, b, c) {
            expect(a).toEqual('A');
            expect(b).toEqual('B');
            expect(c).toEqual('C');
            done();
        }, null);
    });

    it('should support wait finish fail', function(done) {
        timing.waitFinish(function(next) {
            setTimeout(function() {
                return next && next('A', 'B', 'C');
            }, 500);
        }, 400, null, done);
    });
});
