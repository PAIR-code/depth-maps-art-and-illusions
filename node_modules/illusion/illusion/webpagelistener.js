function WebPageListener() {
    this.webPages = {};
}

WebPageListener.prototype.register = function(page) {
    this.webPages[page.pageID] = page;
};

WebPageListener.prototype.on = function(data) {
    var webPage = this.webPages[data.pageID];
    switch (data.event) {
    case 'Page.NavigationRequested':
        webPage.emit('Page.NavigationRequested', data.url, data.type, data.willNavigate, data.main);
        break;
    case 'Page.URLChanged':
        webPage.emit('Page.URLChanged', data.targetURL);
        break;
    case 'Page.LoadStarted':
        webPage.emit('Page.LoadStarted');
        break;
    case 'Page.LoadFinished':
        webPage.emit('Page.LoadFinished', data.status);
        break;
    case 'Page.Initialized':
        webPage.emit('Page.Initialized');
        break;
    case 'Page.Closing':
        webPage.emit('Page.Closing', data.url, data.title);
        break;
    case 'Page.ConsoleMessage':
        webPage.emit('Page.ConsoleMessage', data.message, data.lineNum, data.sourceID);
        break;
    case 'Page.Error':
        webPage.emit('Page.Error', data.message, data.trace);
        break;
    case 'Page.Alert':
        webPage.emit('Page.Alert', data.message);
        break;
    default:
        break;
    }
};

module.exports = WebPageListener;